local matchanovel = require "matchanovel.matchanovel"
local save = require "matchanovel.save"

local framerates_wait = 60

local active = false
local active_on_debug = false
local active_on_release = false
local console_active = false
local console_text = ""
local framerates = {}

local function show_console()
	gui.set_enabled(gui.get_node("debug"), true)
	gui.set_enabled(gui.get_node("console"), true)
	console_active = true
end

local function hide_console()
	gui.set_enabled(gui.get_node("console"), false)
	console_active = false
end

local function toggle_console()
	if console_active then
		hide_console()
	else
		--show_console()
	end
end

local function console_input_text(s)
	if s=="#" then return end
	console_text = console_text..s
	gui.set_text(gui.get_node("console_text"), console_text)
end

local function console_input_backspace()
	if #console_text > 0 then 
		console_text = string.sub(console_text, 1, -2)
	end
	gui.set_text(gui.get_node("console_text"), console_text)
end

local function execute_code(s)
	--matchanovel
end

local function console_enter()
	execute_code(console_text)
	console_text = ""
	gui.set_text(gui.get_node("console_text"), "")
end





function init(self)
	gui.set_render_order(15)
	active = sys.get_engine_info().is_debug
	local var_debug = save.get_var("debug")
	if not active_on_debug or (not active and not active_on_release) then
		gui.set_enabled(gui.get_node("debug"), false)
	end
end

function update(self, dt)
	if dt > 0 then 
		table.insert(framerates, 1/dt)
		if #framerates > framerates_wait then
			local fps = 0
			for _, v in pairs(framerates) do
				fps = fps + v
			end
			fps = fps / #framerates
			gui.set_text(gui.get_node("fps"), math.floor(fps))
			framerates = {}
		end
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("set_render_order") then
		gui.set_render_order(message.n)
	end
end

function on_input(self, action_id, action)
	if console_active then
		if action_id == hash("debug") and action.pressed then
			toggle_console()
		elseif action_id == hash("backspace") and action.repeated  then
			console_input_backspace()
			return true
		elseif action_id == hash("enter") and action.pressed  then
			console_enter()
			return true
		elseif action_id == hash("text") then
			console_input_text(action.text)
			return true
		end
	end
	
	if action_id == hash("debug") and action.pressed then
		toggle_console()
	end
end
